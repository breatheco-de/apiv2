# Generated by Django 5.0.3 on 2024-04-03 06:31

import breathecode.payments.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("payments", "0043_remove_consumable_app_service_serviceset_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Coupon",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField()),
                (
                    "discount_type",
                    models.CharField(
                        choices=[
                            ("NO_DISCOUNT", "No discount"),
                            ("PERCENT_OFF", "Percent off"),
                            ("FIXED_PRICE", "Fixed price"),
                            ("HAGGLING", "Haggling"),
                        ],
                        db_index=True,
                        default="PERCENT_OFF",
                        max_length=13,
                    ),
                ),
                ("discount_value", models.FloatField(help_text="if type is PERCENT_OFF it's a percentage (range 0-1)")),
                (
                    "referral_type",
                    models.CharField(
                        choices=[
                            ("NO_REFERRAL", "No referral"),
                            ("PERCENTAGE", "Percentage"),
                            ("FIXED_PRICE", "Fixed price"),
                        ],
                        db_index=True,
                        default="NO_REFERRAL",
                        max_length=13,
                    ),
                ),
                ("referral_value", models.FloatField(default=0, help_text="If set, the seller will receive a reward")),
                (
                    "auto",
                    models.BooleanField(
                        db_index=True, default=False, help_text="Automatically apply this coupon (like a special offer)"
                    ),
                ),
                (
                    "how_many_offers",
                    models.IntegerField(
                        default=-1,
                        help_text="if -1 means no limits in the offers provided, if 0 nobody can't use this coupon",
                    ),
                ),
                ("offered_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("expires_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "plans",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Available plans, if refferal type is not NO_REFERRAL it should keep empty, so, in this case, all plans will be available",
                        to="payments.plan",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bag",
            name="coupons",
            field=models.ManyToManyField(
                blank=True,
                help_text="Coupons applied during the sale",
                limit_choices_to=breathecode.payments.models.limit_coupon_choices,
                to="payments.coupon",
            ),
        ),
        migrations.CreateModel(
            name="Seller",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="Company name or person name", max_length=30)),
                (
                    "type",
                    models.CharField(
                        choices=[("INDIVIDUAL", "Individual"), ("BUSINESS", "Business")],
                        db_index=True,
                        default="INDIVIDUAL",
                        max_length=13,
                    ),
                ),
                ("is_active", models.BooleanField(default=True, help_text="Is the seller active to be selected?")),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"is_active": True},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="coupon",
            name="seller",
            field=models.ForeignKey(
                blank=True,
                help_text="Seller",
                limit_choices_to={"is_active": True},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="payments.seller",
            ),
        ),
    ]
