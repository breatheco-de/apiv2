# Generated by Django 5.2 on 2025-09-23 03:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("payments", "0008_paymentmethod_deprecated_paymentmethod_visibility"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="bag",
            name="seat_service_item",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="ServiceItem used as seat pricing for per-seat purchases",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_as_seat_service_item",
                to="payments.serviceitem",
            ),
        ),
        migrations.AddField(
            model_name="plan",
            name="consumption_strategy",
            field=models.CharField(
                choices=[("PER_TEAM", "Per team"), ("PER_SEAT", "Per seat"), ("BOTH", "Both")],
                default="PER_SEAT",
                help_text="Consumption strategy",
                max_length=8,
            ),
        ),
        migrations.AddField(
            model_name="plan",
            name="seat_service_price",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="AcademyService used as seat pricing for per-seat purchases",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="plans_as_seat_service_price",
                to="payments.academyservice",
            ),
        ),
        migrations.AddField(
            model_name="planfinancing",
            name="seat_service_item",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="ServiceItem used as seat pricing for per-seat purchases",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_as_seat_service_item",
                to="payments.serviceitem",
            ),
        ),
        migrations.AddField(
            model_name="serviceitem",
            name="is_team_allowed",
            field=models.BooleanField(db_index=True, default=False, help_text="Allow team seats for this item"),
        ),
        migrations.AddField(
            model_name="subscription",
            name="has_billing_team",
            field=models.BooleanField(
                db_index=True, default=False, help_text="If true, this subscription has a billing team"
            ),
        ),
        migrations.AddField(
            model_name="subscription",
            name="seat_service_item",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="ServiceItem used as seat pricing for per-seat purchases",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_as_seat_service_item",
                to="payments.serviceitem",
            ),
        ),
        migrations.AlterField(
            model_name="consumable",
            name="user",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="Customer",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="plan",
            name="add_ons",
            field=models.ManyToManyField(
                blank=True,
                help_text="Service item bundles that can be purchased with this plan",
                related_name="plans_with_add_ons",
                to="payments.academyservice",
            ),
        ),
        migrations.AlterField(
            model_name="service",
            name="type",
            field=models.CharField(
                choices=[
                    ("COHORT_SET", "Cohort set"),
                    ("MENTORSHIP_SERVICE_SET", "Mentorship service set"),
                    ("EVENT_TYPE_SET", "Event type set"),
                    ("VOID", "Void"),
                    ("SEAT", "Seat"),
                ],
                default="COHORT_SET",
                help_text="Service type",
                max_length=22,
            ),
        ),
        migrations.CreateModel(
            name="SubscriptionBillingTeam",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="Team name", max_length=80)),
                (
                    "seats_log",
                    models.JSONField(
                        blank=True, default=list, help_text="Audit log of seat changes for this billing team"
                    ),
                ),
                ("seats_limit", models.PositiveIntegerField(default=1, help_text="Limit of seats for this team")),
                (
                    "consumption_strategy",
                    models.CharField(
                        choices=[("PER_TEAM", "Per team"), ("PER_SEAT", "Per seat")],
                        default="PER_SEAT",
                        help_text="Consumption strategy",
                        max_length=8,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subscription",
                    models.OneToOneField(
                        help_text="Subscription",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="payments.subscription",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="consumable",
            name="subscription_billing_team",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="Subscription billing team",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="payments.subscriptionbillingteam",
            ),
        ),
        migrations.CreateModel(
            name="SubscriptionSeat",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "email",
                    models.CharField(
                        db_index=True, default="", help_text="Email of the member (normalized)", max_length=150
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="if true, this user is able to access the subscription"
                    ),
                ),
                (
                    "seat_multiplier",
                    models.PositiveIntegerField(
                        default=1, help_text="Multiplier applied to per-member consumables issuance (>= 1)"
                    ),
                ),
                (
                    "seat_log",
                    models.JSONField(blank=True, default=list, help_text="Audit log of seat changes for this seat"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "billing_team",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="Subscription billing team",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seats",
                        to="payments.subscriptionbillingteam",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="Assigned user",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="consumable",
            name="subscription_seat",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="Subscription seat associated to this consumable (if any)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="payments.subscriptionseat",
            ),
        ),
        migrations.AddField(
            model_name="servicestockscheduler",
            name="subscription_seat",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="Subscription seat",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="payments.subscriptionseat",
            ),
        ),
        migrations.AddConstraint(
            model_name="subscriptionseat",
            constraint=models.UniqueConstraint(
                condition=models.Q(("user__isnull", False)),
                fields=("billing_team", "user"),
                name="uniq_subscription_seat_per_user",
            ),
        ),
        migrations.AddConstraint(
            model_name="subscriptionseat",
            constraint=models.UniqueConstraint(
                fields=("billing_team", "email"), name="uniq_subscription_seat_per_email"
            ),
        ),
    ]
