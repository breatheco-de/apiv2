# Generated by Django 5.2 on 2025-05-16 04:21

import datetime

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import breathecode.utils.validators.language


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("admissions", "0002_initial"),
        ("authenticate", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AcademyProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("admissions.academy",),
        ),
        migrations.CreateModel(
            name="AcademyAlias",
            fields=[
                ("slug", models.SlugField(primary_key=True, serialize=False)),
                ("active_campaign_slug", models.SlugField()),
                ("academy", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.academy")),
            ],
        ),
        migrations.CreateModel(
            name="ActiveCampaignAcademy",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("ac_key", models.CharField(max_length=150)),
                ("ac_url", models.URLField()),
                (
                    "crm_vendor",
                    models.CharField(
                        choices=[("ACTIVE_CAMPAIGN", "Active Campaign"), ("BREVO", "Brevo")],
                        default="ACTIVE_CAMPAIGN",
                        help_text="Only one vendor allowed per academy, defaults to active campaign",
                        max_length=20,
                    ),
                ),
                (
                    "duplicate_leads_delta_avoidance",
                    models.DurationField(
                        default=datetime.timedelta(seconds=1800),
                        help_text="Leads that apply to the same course on this timedelta will not be sent to AC",
                    ),
                ),
                (
                    "sync_status",
                    models.CharField(
                        choices=[("INCOMPLETED", "Incompleted"), ("COMPLETED", "Completed")],
                        default="INCOMPLETED",
                        help_text="Automatically set when interacting with the Active Campaign API",
                        max_length=15,
                    ),
                ),
                (
                    "sync_message",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Contains any success or error messages depending on the status",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("last_interaction_at", models.DateTimeField(blank=True, default=None, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("academy", models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to="admissions.academy")),
            ],
        ),
        migrations.CreateModel(
            name="Automation",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        default="",
                        help_text="unique string id that is used to connect incoming leads to automations",
                        max_length=150,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("acp_id", models.PositiveIntegerField(help_text="ID asigned in active campaign")),
                (
                    "status",
                    models.CharField(
                        choices=[("1", "Active"), ("2", "Innactive"), ("0", "Uknown")],
                        default="0",
                        help_text="2 = inactive, 1=active",
                        max_length=1,
                    ),
                ),
                ("entered", models.PositiveIntegerField(help_text="How many contacts have entered")),
                ("exited", models.PositiveIntegerField(help_text="How many contacts have exited")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ac_academy",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marketing.activecampaignacademy",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="activecampaignacademy",
            name="event_attendancy_automation",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="marketing.automation",
            ),
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(default=None, max_length=150, null=True)),
                ("email", models.CharField(max_length=150, unique=True)),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=17,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("language", models.CharField(max_length=2)),
                ("country", models.CharField(max_length=30)),
                ("city", models.CharField(max_length=30)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("academy", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.academy")),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField(max_length=150, unique=True)),
                (
                    "is_listed",
                    models.BooleanField(default=True, help_text="controls inclusion in browser listings and sitemaps"),
                ),
                ("plan_slug", models.SlugField(blank=True, default=None, max_length=150, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("ACTIVE", "Active"), ("DELETED", "Deleted"), ("ARCHIVED", "Archived")],
                        default="ACTIVE",
                        max_length=15,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Add the color with hexadecimal format, i.e.: #FFFFFF",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "status_message",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Error message if status is ERROR",
                        max_length=250,
                        null=True,
                    ),
                ),
                (
                    "plan_by_country_code",
                    models.JSONField(
                        blank=True,
                        default=None,
                        null=True,
                    ),
                ),
                (
                    "visibility",
                    models.CharField(
                        choices=[("PRIVATE", "Private"), ("UNLISTED", "Unlisted"), ("PUBLIC", "Public")],
                        default="PRIVATE",
                        max_length=15,
                    ),
                ),
                ("icon_url", models.URLField(help_text="Image icon to show on website")),
                (
                    "banner_image",
                    models.URLField(blank=True, default=None, help_text="Banner image to show on website", null=True),
                ),
                ("technologies", models.CharField(max_length=240)),
                ("has_waiting_list", models.BooleanField(default=False, help_text="Has waiting list?")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("academy", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.academy")),
                (
                    "cohort",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admissions.cohort",
                    ),
                ),
                (
                    "invites",
                    models.ManyToManyField(
                        blank=True, help_text="Plan's invites", related_name="courses", to="authenticate.userinvite"
                    ),
                ),
                ("syllabus", models.ManyToManyField(blank=True, to="admissions.syllabus")),
            ],
        ),
        migrations.CreateModel(
            name="CourseTranslation",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "lang",
                    models.CharField(
                        max_length=5, validators=[breathecode.utils.validators.language.validate_language_code]
                    ),
                ),
                ("title", models.CharField(max_length=60)),
                (
                    "heading",
                    models.TextField(
                        blank=True,
                        default=None,
                        help_text="Heading that will be used in the landing page",
                        max_length=400,
                        null=True,
                    ),
                ),
                ("description", models.TextField(max_length=400)),
                ("short_description", models.CharField(blank=True, default=None, max_length=120, null=True)),
                (
                    "video_url",
                    models.URLField(
                        blank=True, default=None, help_text="Video that introduces/promotes this course", null=True
                    ),
                ),
                (
                    "featured_assets",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Comma separated list of asset slugs featured in this course translation.",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "landing_url",
                    models.URLField(
                        blank=True,
                        default=None,
                        help_text="Landing URL used on call to actions where the course is shown. A URL is needed per each translation.",
                        null=True,
                    ),
                ),
                (
                    "preview_url",
                    models.URLField(
                        blank=True, default=None, help_text="Preview URL used for marketing purposes.", null=True
                    ),
                ),
                (
                    "course_modules",
                    models.JSONField(
                        blank=True,
                        default=None,
                        help_text="The course modules should be a list of objects of each of the modules taught",
                        null=True,
                    ),
                ),
                (
                    "landing_variables",
                    models.JSONField(
                        blank=True,
                        default=None,
                        help_text="Different variables that can be used for marketing purposes in the landing page.",
                        null=True,
                    ),
                ),
                ("course", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="marketing.course")),
            ],
        ),
        migrations.CreateModel(
            name="Downloadable",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField(max_length=150, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(max_length=450)),
                ("hits", models.IntegerField(default=0)),
                (
                    "active",
                    models.BooleanField(
                        default=True, help_text="Non-active downloadables will display a message to the user"
                    ),
                ),
                ("preview_url", models.URLField()),
                ("destination_url", models.URLField()),
                (
                    "destination_status",
                    models.CharField(
                        choices=[("ACTIVE", "Active"), ("NOT_FOUND", "Not found"), ("ERROR", "Error")],
                        default="ACTIVE",
                        max_length=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("academy", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.academy")),
                ("author", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name="FormEntry",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("fb_leadgen_id", models.BigIntegerField(blank=True, default=None, null=True)),
                ("fb_page_id", models.BigIntegerField(blank=True, default=None, null=True)),
                ("fb_form_id", models.BigIntegerField(blank=True, default=None, null=True)),
                ("fb_adgroup_id", models.BigIntegerField(blank=True, default=None, null=True)),
                ("fb_ad_id", models.BigIntegerField(blank=True, default=None, null=True)),
                ("first_name", models.CharField(blank=True, default="", max_length=150)),
                ("last_name", models.CharField(blank=True, default="", max_length=150)),
                ("email", models.CharField(blank=True, default=None, max_length=150, null=True)),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        default=None,
                        max_length=17,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the format: '+99999999'. Up to 15 digits allowed.",
                                regex="^\\+?1?\\d{8,15}$",
                            )
                        ],
                    ),
                ),
                ("course", models.CharField(blank=True, default=None, max_length=70, null=True)),
                ("client_comments", models.CharField(blank=True, default=None, max_length=250, null=True)),
                ("location", models.CharField(blank=True, default=None, max_length=70, null=True)),
                ("language", models.CharField(default="en", max_length=2)),
                ("utm_url", models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ("utm_medium", models.CharField(blank=True, default=None, max_length=70, null=True)),
                ("utm_campaign", models.CharField(blank=True, default=None, max_length=70, null=True)),
                ("utm_content", models.CharField(blank=True, default=None, max_length=70, null=True)),
                ("utm_source", models.CharField(blank=True, default=None, max_length=70, null=True)),
                (
                    "utm_term",
                    models.CharField(
                        blank=True, default=None, help_text="Keyword used in cpc", max_length=50, null=True
                    ),
                ),
                (
                    "utm_placement",
                    models.CharField(
                        blank=True, default=None, help_text="User agent or device screen", max_length=50, null=True
                    ),
                ),
                (
                    "utm_plan",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="If its applying for a scholarship, upfront, isa, financing, etc.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "custom_fields",
                    models.JSONField(
                        blank=True,
                        default=None,
                        help_text="Other incoming values in the payload will be saved here as they come",
                        null=True,
                    ),
                ),
                (
                    "current_download",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Slug of the breathecode.marketing.downloadable",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("referral_key", models.CharField(blank=True, default=None, max_length=70, null=True)),
                ("gclid", models.CharField(blank=True, default=None, max_length=255, null=True)),
                (
                    "tags",
                    models.CharField(blank=True, default="", help_text="Comma separated list of tags", max_length=100),
                ),
                (
                    "automations",
                    models.CharField(
                        blank=True, default="", help_text="Comma separated list of automations", max_length=100
                    ),
                ),
                ("street_address", models.CharField(blank=True, default=None, max_length=250, null=True)),
                ("country", models.CharField(blank=True, default=None, max_length=30, null=True)),
                ("city", models.CharField(blank=True, default=None, max_length=30, null=True)),
                (
                    "latitude",
                    models.DecimalField(blank=True, decimal_places=15, default=None, max_digits=30, null=True),
                ),
                (
                    "longitude",
                    models.DecimalField(blank=True, decimal_places=15, default=None, max_digits=30, null=True),
                ),
                ("state", models.CharField(blank=True, default=None, max_length=30, null=True)),
                ("zip_code", models.CharField(blank=True, default=None, max_length=15, null=True)),
                ("browser_lang", models.CharField(blank=True, default=None, max_length=10, null=True)),
                (
                    "sex",
                    models.CharField(
                        blank=True, default=None, help_text="M=male,F=female,O=other", max_length=15, null=True
                    ),
                ),
                (
                    "storage_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PERSISTED", "Persisted"),
                            ("REJECTED", "Rejected"),
                            ("DUPLICATED", "Duplicated"),
                            ("ERROR", "Error"),
                        ],
                        default="PENDING",
                        help_text="MANUALLY_PERSISTED means it was copy pasted into active campaign",
                        max_length=20,
                    ),
                ),
                (
                    "storage_status_text",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Will show exception message or any other cloud on the error that occurred (if any)",
                        max_length=250,
                    ),
                ),
                (
                    "lead_type",
                    models.CharField(
                        choices=[("STRONG", "Strong"), ("SOFT", "Soft"), ("DISCOVERY", "Discovery")],
                        default=None,
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "deal_status",
                    models.CharField(
                        blank=True, choices=[("WON", "Won"), ("LOST", "Lost")], default=None, max_length=15, null=True
                    ),
                ),
                (
                    "sentiment",
                    models.CharField(
                        blank=True, choices=[("GOOD", "Good"), ("BAD", "Bad")], default=None, max_length=15, null=True
                    ),
                ),
                (
                    "ac_expected_cohort",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Which cohort is this student expecting to join",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "ac_expected_cohort_date",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Which date is this student expecting to join",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "ac_contact_id",
                    models.CharField(
                        blank=True, default=None, help_text="Active Campaign Contact ID", max_length=20, null=True
                    ),
                ),
                (
                    "ac_deal_id",
                    models.CharField(
                        blank=True, default=None, help_text="Active Campaign Deal ID", max_length=20, null=True
                    ),
                ),
                (
                    "ac_deal_location",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="If != location it means it was updated later on CRM",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "ac_deal_course",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="If != course it means it was updated later on CRM",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("ac_deal_owner_id", models.CharField(blank=True, default=None, max_length=15, null=True)),
                ("ac_deal_owner_full_name", models.CharField(blank=True, default=None, max_length=150, null=True)),
                ("ac_deal_amount", models.FloatField(blank=True, default=None, null=True)),
                ("ac_deal_currency_code", models.CharField(blank=True, default=None, max_length=3, null=True)),
                ("won_at", models.DateTimeField(blank=True, default=None, null=True)),
                (
                    "attribution_id",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Keep a consistent attribution from al the previous applications from the same email (it will reset to a new one for each WON)",
                        max_length=30,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "academy",
                    models.ForeignKey(
                        default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to="admissions.academy"
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marketing.contact",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ActiveCampaignWebhook",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("webhook_type", models.CharField(blank=True, default=None, max_length=100, null=True)),
                (
                    "run_at",
                    models.DateTimeField(
                        blank=True, default=None, help_text="Date/time that the webhook ran", null=True
                    ),
                ),
                (
                    "initiated_by",
                    models.CharField(
                        help_text="Source/section of the software that triggered the webhook to run", max_length=100
                    ),
                ),
                (
                    "payload",
                    models.JSONField(
                        help_text="Extra info that came on the request, it varies depending on the webhook type"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("PENDING", "Pending"), ("DONE", "Done"), ("ERROR", "Error")],
                        default="PENDING",
                        max_length=9,
                    ),
                ),
                ("status_text", models.CharField(blank=True, default=None, max_length=255, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ac_academy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="marketing.activecampaignacademy"
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marketing.contact",
                    ),
                ),
                (
                    "form_entry",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marketing.formentry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LeadGenerationApp",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField(max_length=150, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(max_length=450)),
                (
                    "app_id",
                    models.CharField(
                        help_text="Unique token generated only for this app, can be reset to revoke access",
                        max_length=255,
                        unique=True,
                    ),
                ),
                ("hits", models.IntegerField(default=0)),
                (
                    "last_request_data",
                    models.TextField(
                        blank=True,
                        default=None,
                        help_text="Incomig payload from the last request",
                        max_length=450,
                        null=True,
                    ),
                ),
                (
                    "last_call_log",
                    models.TextField(
                        blank=True,
                        default=None,
                        help_text="Incomig payload from the last request",
                        max_length=450,
                        null=True,
                    ),
                ),
                (
                    "last_call_status",
                    models.CharField(
                        blank=True, choices=[("OK", "Ok"), ("ERROR", "Error")], default=None, max_length=9, null=True
                    ),
                ),
                (
                    "last_call_at",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        help_text="Timestamp from the last time this app called our API",
                        null=True,
                    ),
                ),
                ("location", models.CharField(blank=True, default=None, max_length=70, null=True)),
                ("language", models.CharField(blank=True, default=None, max_length=2, null=True)),
                ("utm_url", models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ("utm_medium", models.CharField(blank=True, default=None, max_length=70, null=True)),
                ("utm_campaign", models.CharField(blank=True, default=None, max_length=70, null=True)),
                ("utm_source", models.CharField(blank=True, default=None, max_length=70, null=True)),
                (
                    "utm_plan",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="If its applying for a scholarship, upfront, isa, financing, etc.",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("academy", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.academy")),
                (
                    "default_automations",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Automations with are slug will be excluded, make sure to set slug to them",
                        to="marketing.automation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="formentry",
            name="lead_generation_app",
            field=models.ForeignKey(
                blank=True,
                default=None,
                help_text="Other apps can send leads to breathecode but they need to be registered here",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="marketing.leadgenerationapp",
            ),
        ),
        migrations.CreateModel(
            name="ShortLink",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField(max_length=150, unique=True)),
                ("destination", models.URLField()),
                ("hits", models.IntegerField(default=0)),
                ("active", models.BooleanField(default=True)),
                ("private", models.BooleanField(default=True)),
                (
                    "destination_status",
                    models.CharField(
                        choices=[("ACTIVE", "Active"), ("NOT_FOUND", "Not found"), ("ERROR", "Error")],
                        default="ACTIVE",
                        max_length=15,
                    ),
                ),
                ("destination_status_text", models.CharField(blank=True, default=None, max_length=250, null=True)),
                (
                    "utm_content",
                    models.CharField(
                        blank=True, default=None, help_text="Can be de ad group id or ad id", max_length=250, null=True
                    ),
                ),
                (
                    "utm_medium",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="social, organic, paid, email, referral, etc.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "utm_campaign",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="Campaign ID when PPC but can be a string in more informal campaigns",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "utm_source",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="fb, ig, google, twitter, quora, etc.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "utm_term",
                    models.CharField(
                        blank=True, default=None, help_text="Keyword used in cpc", max_length=50, null=True
                    ),
                ),
                (
                    "utm_placement",
                    models.CharField(
                        blank=True, default=None, help_text="User agent or device screen", max_length=50, null=True
                    ),
                ),
                (
                    "utm_plan",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="If its applying for a scholarship, upfront, isa, financing, etc.",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "lastclick_at",
                    models.DateTimeField(
                        blank=True, default=None, help_text="Last time a click was registered for this link", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("academy", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.academy")),
                ("author", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField(max_length=150)),
                (
                    "tag_type",
                    models.CharField(
                        choices=[
                            ("STRONG", "Strong"),
                            ("SOFT", "Soft"),
                            ("DISCOVERY", "Discovery"),
                            ("COHORT", "Cohort"),
                            ("DOWNLOADABLE", "Downloadable"),
                            ("EVENT", "Event"),
                            ("OTHER", "Other"),
                        ],
                        default=None,
                        help_text="The STRONG tags in a lead will determine to witch automation it does unless there is an 'automation' property on the lead JSON",
                        max_length=15,
                        null=True,
                    ),
                ),
                ("acp_id", models.IntegerField(help_text="The id coming from active campaign")),
                ("subscribers", models.IntegerField()),
                (
                    "disputed_at",
                    models.DateTimeField(
                        blank=True,
                        default=None,
                        help_text="Disputed tags get deleted after 10 days unless its used in 1+ automations or has 1+ subscriber",
                        null=True,
                    ),
                ),
                (
                    "disputed_reason",
                    models.TextField(
                        blank=True, default=None, help_text="Explain why you think the tag should be deleted", null=True
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, default=None, help_text="How is this tag being used? Why is it needed?", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ac_academy",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marketing.activecampaignacademy",
                    ),
                ),
                (
                    "automation",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        help_text="Leads that contain this tag will be asociated to this automation",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="marketing.automation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="leadgenerationapp",
            name="default_tags",
            field=models.ManyToManyField(blank=True, to="marketing.tag"),
        ),
        migrations.CreateModel(
            name="UTMField",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("slug", models.SlugField(max_length=150, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(max_length=450)),
                (
                    "utm_type",
                    models.CharField(
                        choices=[
                            ("CONTENT", "Content"),
                            ("SOURCE", "Source"),
                            ("MEDIUM", "Medium"),
                            ("CAMPAIGN", "Campaign"),
                        ],
                        default=None,
                        max_length=15,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("academy", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.academy")),
                ("author", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
