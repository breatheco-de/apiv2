# Generated by Django 3.2.16 on 2022-10-29 05:31

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('registry', '0015_auto_20221026_0340'),
    ]

    operations = [
        migrations.AlterField(
            model_name='asset',
            name='cleaning_status',
            field=models.CharField(blank=True,
                                   choices=[('PENDING', 'Pending'), ('ERROR', 'Error'), ('OK', 'Ok'),
                                            ('WARNING', 'Warning'), ('NEEDS_RESYNC', 'Needs Resync')],
                                   default='PENDING',
                                   help_text='Internal state automatically set by the system based on cleanup',
                                   max_length=20,
                                   null=True),
        ),
        migrations.AlterField(
            model_name='asset',
            name='sync_status',
            field=models.CharField(blank=True,
                                   choices=[('PENDING', 'Pending'), ('ERROR', 'Error'), ('OK', 'Ok'),
                                            ('WARNING', 'Warning'), ('NEEDS_RESYNC', 'Needs Resync')],
                                   default=None,
                                   help_text='Internal state automatically set by the system based on sync',
                                   max_length=20,
                                   null=True),
        ),
        migrations.AlterField(
            model_name='asset',
            name='test_status',
            field=models.CharField(blank=True,
                                   choices=[('PENDING', 'Pending'), ('ERROR', 'Error'), ('OK', 'Ok'),
                                            ('WARNING', 'Warning'), ('NEEDS_RESYNC', 'Needs Resync')],
                                   default=None,
                                   help_text='Internal state automatically set by the system based on test',
                                   max_length=20,
                                   null=True),
        ),
        migrations.AlterField(
            model_name='seoreport',
            name='status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('ERROR', 'Error'), ('OK', 'Ok'),
                                            ('WARNING', 'Warning'), ('NEEDS_RESYNC', 'Needs Resync')],
                                   default='PENDING',
                                   help_text='Internal state automatically set by the system',
                                   max_length=20),
        ),
        migrations.CreateModel(
            name='AssetImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('mime', models.CharField(max_length=60)),
                ('bucket_url', models.URLField(max_length=255)),
                ('original_url', models.URLField(max_length=255)),
                ('hash', models.CharField(max_length=64)),
                ('last_download_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('download_details', models.TextField(blank=True, default=None, null=True)),
                ('download_status',
                 models.CharField(blank=True,
                                  choices=[('PENDING', 'Pending'), ('ERROR', 'Error'), ('OK', 'Ok'),
                                           ('WARNING', 'Warning'), ('NEEDS_RESYNC', 'Needs Resync')],
                                  default='PENDING',
                                  help_text='Internal state automatically set by the system based on download',
                                  max_length=20,
                                  null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assets', models.ManyToManyField(blank=True, related_name='images', to='registry.Asset')),
            ],
        ),
    ]
