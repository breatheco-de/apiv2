# Generated by Django 5.2 on 2025-08-24 20:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("admissions", "0003_cohort_shortcuts"),
        ("commission", "0001_initial"),
        ("payments", "0007_plan_title"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TeacherInfluencerCommission",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("month", models.DateField(db_index=True, help_text="Month (YYYY-MM-01) for the commission period")),
                (
                    "commission_type",
                    models.CharField(
                        choices=[("REFERRAL", "Referral"), ("USAGE", "Usage")], db_index=True, max_length=10
                    ),
                ),
                ("amount_paid", models.FloatField(default=0.0)),
                ("num_users", models.IntegerField(default=0)),
                ("details", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cohort",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="admissions.cohort"
                    ),
                ),
                ("currency", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="payments.currency")),
                (
                    "influencer",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "unique_together": {("influencer", "cohort", "month", "commission_type", "currency")},
            },
        ),
        migrations.CreateModel(
            name="TeacherInfluencerPayment",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("month", models.DateField(db_index=True)),
                ("total_amount", models.FloatField(default=0.0)),
                (
                    "status",
                    models.CharField(
                        choices=[("PENDING", "Pending"), ("PAID", "Paid")],
                        db_index=True,
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                ("payment_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("commissions", models.ManyToManyField(blank=True, to="commission.teacherinfluencercommission")),
                ("currency", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="payments.currency")),
                (
                    "influencer",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeacherInfluencerReferralCommission",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("amount", models.FloatField(default=0.0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("MATURED", "Matured"),
                            ("PAID", "Paid"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        db_index=True,
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "available_at",
                    models.DateTimeField(help_text="Date when this referral becomes eligible (e.g., paid_at + 30d)"),
                ),
                ("matured_at", models.DateTimeField(blank=True, null=True)),
                ("status_text", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("academy", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.academy")),
                (
                    "buyer",
                    models.ForeignKey(
                        help_text="the person that paid and used the referral coupon",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="influencer_referred_buys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("currency", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="payments.currency")),
                (
                    "invoice",
                    models.OneToOneField(
                        help_text="Related paid invoice",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="influencer_referral_record",
                        to="payments.invoice",
                    ),
                ),
                (
                    "teacher_influencer",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CohortTeacherInfluencer",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("cohort", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.cohort")),
                (
                    "influencer",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
            options={
                "unique_together": {("cohort", "influencer")},
            },
        ),
        migrations.CreateModel(
            name="UserCohortEngagement",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("month", models.DateField(db_index=True, help_text="Month (YYYY-MM-01)")),
                ("user_total_points", models.FloatField(default=0.0)),
                ("cohort_points", models.FloatField(default=0.0)),
                ("paid_amount", models.FloatField(default=0.0)),
                ("commission_amount", models.FloatField(default=0.0)),
                ("details", models.JSONField(blank=True, default=dict, help_text="Activity breakdown and metadata")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("academy", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.academy")),
                ("cohort", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="admissions.cohort")),
                ("currency", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="payments.currency")),
                (
                    "influencer",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teacher_influencer_engagements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("influencer", "user", "cohort", "month", "currency")},
            },
        ),
    ]
