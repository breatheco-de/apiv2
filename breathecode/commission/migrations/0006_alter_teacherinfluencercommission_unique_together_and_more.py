# Generated by Django 5.2 on 2025-08-27 16:14

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("admissions", "0003_cohort_shortcuts"),
        ("commission", "0005_rename_usercohortengagement_userusagecommission"),
        ("payments", "0007_plan_title"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name="teacherinfluencercommission",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="teacherinfluencercommission",
            name="cohort",
        ),
        migrations.RemoveField(
            model_name="teacherinfluencercommission",
            name="currency",
        ),
        migrations.RemoveField(
            model_name="teacherinfluencercommission",
            name="influencer",
        ),
        migrations.RemoveField(
            model_name="teacherinfluencerpayment",
            name="commissions",
        ),
        migrations.RemoveField(
            model_name="teacherinfluencerpayment",
            name="currency",
        ),
        migrations.RemoveField(
            model_name="teacherinfluencerpayment",
            name="influencer",
        ),
        migrations.RemoveField(
            model_name="teacherinfluencerreferralcommission",
            name="academy",
        ),
        migrations.RemoveField(
            model_name="teacherinfluencerreferralcommission",
            name="buyer",
        ),
        migrations.RemoveField(
            model_name="teacherinfluencerreferralcommission",
            name="currency",
        ),
        migrations.RemoveField(
            model_name="teacherinfluencerreferralcommission",
            name="invoice",
        ),
        migrations.RemoveField(
            model_name="teacherinfluencerreferralcommission",
            name="teacher_influencer",
        ),
        migrations.RemoveField(
            model_name="userusagecommission",
            name="details",
        ),
        migrations.AlterField(
            model_name="userusagecommission",
            name="academy",
            field=models.ForeignKey(
                help_text="The academy where the activity occurred",
                on_delete=django.db.models.deletion.CASCADE,
                to="admissions.academy",
            ),
        ),
        migrations.AlterField(
            model_name="userusagecommission",
            name="cohort",
            field=models.ForeignKey(
                help_text="The cohort where the user had activity",
                on_delete=django.db.models.deletion.CASCADE,
                to="admissions.cohort",
            ),
        ),
        migrations.AlterField(
            model_name="userusagecommission",
            name="cohort_points",
            field=models.FloatField(
                default=0.0, help_text="Engagement points earned by the user in this specific cohort"
            ),
        ),
        migrations.AlterField(
            model_name="userusagecommission",
            name="commission_amount",
            field=models.FloatField(
                default=0.0, help_text="Commission amount earned by the influencer from this user's activity"
            ),
        ),
        migrations.AlterField(
            model_name="userusagecommission",
            name="currency",
            field=models.ForeignKey(
                help_text="Currency of the paid amount and commission",
                on_delete=django.db.models.deletion.CASCADE,
                to="payments.currency",
            ),
        ),
        migrations.AlterField(
            model_name="userusagecommission",
            name="influencer",
            field=models.ForeignKey(
                help_text="The geek creator who will receive commission from this user's activity",
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="userusagecommission",
            name="month",
            field=models.DateField(db_index=True, help_text="Month (YYYY-MM-01) for the commission period"),
        ),
        migrations.AlterField(
            model_name="userusagecommission",
            name="paid_amount",
            field=models.FloatField(default=0.0, help_text="Total amount paid by the user for services"),
        ),
        migrations.AlterField(
            model_name="userusagecommission",
            name="user",
            field=models.ForeignKey(
                help_text="The user whose activity generates commission",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="geek_creator_engagements",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="userusagecommission",
            name="user_total_points",
            field=models.FloatField(
                default=0.0, help_text="Total engagement points earned by the user across all cohorts"
            ),
        ),
        migrations.CreateModel(
            name="GeekCreatorCohort",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "assigned_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the influencer was assigned to this cohort"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Whether this influencer is currently active"),
                ),
                (
                    "cohort",
                    models.ForeignKey(
                        help_text="The cohort where the influencer is assigned",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admissions.cohort",
                    ),
                ),
                (
                    "influencer",
                    models.ForeignKey(
                        help_text="The geek creator assigned to this cohort",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("cohort", "influencer")},
            },
        ),
        migrations.CreateModel(
            name="GeekCreatorCommission",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("month", models.DateField(db_index=True, help_text="Month (YYYY-MM-01) for the commission period")),
                (
                    "commission_type",
                    models.CharField(
                        choices=[("REFERRAL", "Referral"), ("USAGE", "Usage")],
                        db_index=True,
                        help_text="Type of commission: referral or usage",
                        max_length=10,
                    ),
                ),
                ("amount_paid", models.FloatField(default=0.0, help_text="Total amount paid for this commission")),
                ("num_users", models.IntegerField(default=0, help_text="Number of users involved in this commission")),
                (
                    "details",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional details and metadata about the commission"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cohort",
                    models.ForeignKey(
                        blank=True,
                        help_text="The cohort related to this commission (null for referral commissions)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admissions.cohort",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        help_text="Currency of the commission amount",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="payments.currency",
                    ),
                ),
                (
                    "influencer",
                    models.ForeignKey(
                        help_text="The geek creator who earned this commission",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "usage_commissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Individual usage commission records included in this commission",
                        related_name="aggregated_usage_commissions",
                        to="commission.userusagecommission",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GeekCreatorPayment",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("month", models.DateField(db_index=True, help_text="Month (YYYY-MM-01) for the payment period")),
                ("total_amount", models.FloatField(default=0.0, help_text="Total amount to be paid for this month")),
                (
                    "status",
                    models.CharField(
                        choices=[("PENDING", "Pending"), ("PAID", "Paid")],
                        db_index=True,
                        default="PENDING",
                        help_text="Current status of the payment",
                        max_length=10,
                    ),
                ),
                (
                    "payment_date",
                    models.DateTimeField(blank=True, help_text="When the payment was actually made", null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "commissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Commissions included in this payment",
                        to="commission.geekcreatorcommission",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        help_text="Currency of the payment amount",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="payments.currency",
                    ),
                ),
                (
                    "influencer",
                    models.ForeignKey(
                        help_text="The geek creator receiving this payment",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GeekCreatorReferralCommission",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("amount", models.FloatField(default=0.0, help_text="Commission amount earned from this referral")),
                (
                    "status",
                    models.CharField(
                        choices=[("PENDING", "Pending"), ("PAID", "Paid"), ("CANCELLED", "Cancelled")],
                        db_index=True,
                        default="PENDING",
                        help_text="Current status of the referral commission",
                        max_length=10,
                    ),
                ),
                (
                    "available_at",
                    models.DateTimeField(help_text="Date when this referral becomes eligible (e.g., paid_at + 30d)"),
                ),
                (
                    "status_text",
                    models.TextField(blank=True, help_text="Additional text describing the status", null=True),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "academy",
                    models.ForeignKey(
                        help_text="The academy where the referral was made",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="admissions.academy",
                    ),
                ),
                (
                    "buyer",
                    models.ForeignKey(
                        help_text="The person that paid and used the referral coupon",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="influencer_referred_buys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        help_text="Currency of the referral commission",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="payments.currency",
                    ),
                ),
                (
                    "geek_creator",
                    models.ForeignKey(
                        help_text="The geek creator who made the referral",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice",
                    models.OneToOneField(
                        help_text="Related paid invoice",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="influencer_referral_record",
                        to="payments.invoice",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="geekcreatorcommission",
            name="referral_commissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Individual referral commission records included in this commission",
                related_name="aggregated_referral_commissions",
                to="commission.geekcreatorreferralcommission",
            ),
        ),
        migrations.DeleteModel(
            name="CohortTeacherInfluencer",
        ),
        migrations.DeleteModel(
            name="TeacherInfluencerCommission",
        ),
        migrations.DeleteModel(
            name="TeacherInfluencerPayment",
        ),
        migrations.DeleteModel(
            name="TeacherInfluencerReferralCommission",
        ),
        migrations.AlterUniqueTogether(
            name="geekcreatorcommission",
            unique_together={("influencer", "cohort", "month", "commission_type", "currency")},
        ),
    ]
