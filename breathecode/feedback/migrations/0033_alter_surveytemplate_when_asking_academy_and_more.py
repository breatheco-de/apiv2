# Generated by Django 5.1.6 on 2025-03-07 20:55

import breathecode.feedback.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("admissions", "0068_merge_20241216_1552"),
        ("feedback", "0032_surveytemplate"),
    ]

    operations = [
        migrations.AlterField(
            model_name="surveytemplate",
            name="when_asking_academy",
            field=models.JSONField(
                blank=True,
                default={
                    "highest": "very likely",
                    "lowest": "not likely",
                    "survey_subject": "One question about the academy",
                    "title": "How likely are you to recommend {} to your friends and family?",
                },
                help_text="Questions to ask about the academy",
                null=True,
                validators=[breathecode.feedback.models.validate_question_structure],
            ),
        ),
        migrations.AlterField(
            model_name="surveytemplate",
            name="when_asking_cohort",
            field=models.JSONField(
                blank=True,
                default={
                    "highest": "very good",
                    "lowest": "not good",
                    "survey_subject": "One question about your cohort",
                    "title": "How has your experience been studying {} so far?",
                },
                help_text="Questions to ask about a cohort",
                null=True,
                validators=[breathecode.feedback.models.validate_question_structure],
            ),
        ),
        migrations.AlterField(
            model_name="surveytemplate",
            name="when_asking_liveclass_mentor",
            field=models.JSONField(
                blank=True,
                default={
                    "highest": "very good",
                    "lowest": "not good",
                    "survey_subject": "One question about the live class mentor",
                    "title": "How would you rate your teacher's performance today?",
                },
                help_text="Questions to ask about a live class mentor",
                null=True,
                validators=[breathecode.feedback.models.validate_question_structure],
            ),
        ),
        migrations.AlterField(
            model_name="surveytemplate",
            name="when_asking_mentor",
            field=models.JSONField(
                blank=True,
                default={
                    "highest": "very good",
                    "lowest": "not good",
                    "survey_subject": "One question about your mentor",
                    "title": "How has your experience been with your mentor {} so far?",
                },
                help_text="Questions to ask about a mentor",
                null=True,
                validators=[breathecode.feedback.models.validate_question_structure],
            ),
        ),
        migrations.AlterField(
            model_name="surveytemplate",
            name="when_asking_mentor_communication",
            field=models.JSONField(
                blank=True,
                default={
                    "highest": "very clear",
                    "lowest": "not clear",
                    "survey_subject": "One question about the live class mentor communication",
                    "title": "How clear was the teacher in explaining the concepts?",
                },
                help_text="Questions to ask about mentor communication during class",
                null=True,
                validators=[breathecode.feedback.models.validate_question_structure],
            ),
        ),
        migrations.AlterField(
            model_name="surveytemplate",
            name="when_asking_mentor_participation",
            field=models.JSONField(
                blank=True,
                default={
                    "highest": "very good",
                    "lowest": "not good",
                    "survey_subject": "One question about the live class mentor practice",
                    "title": "Did the teacher encourage participation and effectively resolve your doubts?",
                },
                help_text="Questions to ask about class how the mentor answers and encoursges participation",
                null=True,
                validators=[breathecode.feedback.models.validate_question_structure],
            ),
        ),
        migrations.AlterField(
            model_name="surveytemplate",
            name="when_asking_mentorshipsession",
            field=models.JSONField(
                blank=True,
                default={
                    "highest": "very useful",
                    "lowest": "not useful",
                    "survey_subject": "One question about your last mentoring session",
                    "title": "How was your experience in your mentoring session with {}?",
                },
                help_text="Questions to ask about a mentorship session",
                null=True,
                validators=[breathecode.feedback.models.validate_question_structure],
            ),
        ),
        migrations.AlterField(
            model_name="surveytemplate",
            name="when_asking_platform",
            field=models.JSONField(
                blank=True,
                default={
                    "highest": "very good",
                    "lowest": "not good",
                    "survey_subject": "One question about the learning platform",
                    "title": "How has your experience been with the platform and content so far?",
                },
                help_text="Questions to ask about the 4Geeks.com platform",
                null=True,
                validators=[breathecode.feedback.models.validate_question_structure],
            ),
        ),
        migrations.CreateModel(
            name="AcademyFeedbackSettings",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "liveclass_survey_cohort_exclusions",
                    models.CharField(
                        blank=True,
                        help_text="Comma separated list of cohort IDs to exclude from live class surveys, leave empty to disable",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "academy",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_settings",
                        to="admissions.academy",
                    ),
                ),
                (
                    "cohort_survey_template",
                    models.ForeignKey(
                        blank=True,
                        help_text="Template used for monthly cohort quality surveys, leave empty to disable",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cohort_survey_academies",
                        to="feedback.surveytemplate",
                    ),
                ),
                (
                    "event_survey_template",
                    models.ForeignKey(
                        blank=True,
                        help_text="Template used for event quality surveys, leave empty to disable",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="event_survey_academies",
                        to="feedback.surveytemplate",
                    ),
                ),
                (
                    "liveclass_survey_template",
                    models.ForeignKey(
                        blank=True,
                        help_text="Template used for live class quality surveys, leave empty to disable",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="liveclass_survey_academies",
                        to="feedback.surveytemplate",
                    ),
                ),
                (
                    "mentorship_session_survey_template",
                    models.ForeignKey(
                        blank=True,
                        help_text="Template used for mentorship session quality surveys, leave empty to disable",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="mentorship_survey_academies",
                        to="feedback.surveytemplate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Academy Feedback Settings",
                "verbose_name_plural": "Academy Feedback Settings",
            },
        ),
    ]
