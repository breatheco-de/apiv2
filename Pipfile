[[source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[scripts]
start="python manage.py runserver 0.0.0.0:8000"
wsgi="gunicorn breathecode.wsgi --worker-class gevent"
asgi="gunicorn breathecode.asgi --worker-class uvicorn.workers.UvicornWorker"
format="pre-commit run --all-files"
migrate="python manage.py migrate"
makemigrations="python manage.py makemigrations"
celery="python -m scripts.celery"
dev="heroku local"
test="python -m scripts.test"
ptest="python -m scripts.parallel_test"
ptest_ci="python -m scripts.parallel_test_ci"
cov="python -m scripts.coverage"
pcov="python -m scripts.parallel_coverage"
pcov_ci="python -m scripts.parallel_coverage_ci"
update_sql_keywords="python -m scripts.update_sql_keywords_json"
create_bucket="python -m scripts.create_bucket"
docker_build="python -m scripts.docker_build"
docker_build_dev="python -m scripts.docker_build_dev"
install_precommit="pre-commit install"
lint="pre-commit run"
sync_active_campaign="python manage.py sync_with_active_campaign"
delete_duplicates="python manage.py delete_duplicates"
docs="mkdocs serve --livereload"
generate_docs="mkdocs build"
doctor="python -m scripts.doctor"
docs_deploy="mkdocs gh-deploy -c"
sign_jwt="python manage.py sign_jwt"
sign_request="python manage.py sign_request"
flake8="flake8 ."

[dev-packages]
pytest-cov = "*"
coverage = "*"
pytest = "*"
coveralls = "*"
pre-commit = "*"
mkdocs = "*"
mkdocs-material = "*"
mkdocstrings = "*"
pytest-xdist = "*"
mkdocstrings-python = "*"
flake8 = "*"
flake8-docstrings = "*"
mccabe = "*"
pep8-naming = "*"
flake8-bugbear = "*"
pytest-gevent = "*"
pytest-asyncio = "*"
google-apps-meet = "*"
google-auth-httplib2 = "*"
google-auth-oauthlib = "*"
black = "*"
capy-core = {extras = ["pytest"], version = "*"}
pyright = "*"
mypy = "*"
google-api-python-client-stubs = "*"
django-stubs = "*"
djangorestframework-stubs = "*"

[packages]
django = "*"
djangorestframework = "*"
serpy = "*"
gunicorn = "*"
requests = "*"
dj-database-url = "*"
django-heroku = "*"
django-cors-headers = "*"
django-phonenumber-field = {extras = ["phonenumberslite"] }
activecampaign-python = "*"
schema = "*"
mixer = "*"
pytest-django = "*"
pygithub = "*"
google-cloud-datastore = "*"
pyfcm = "*"
twilio = "*"
google-cloud-storage = "*"
celery = "*"
eventbrite = "*"
pillow = "*"
django-redis = "*"
pytz = "*"
hiredis = "*"
icalendar = "*"
djangorestframework-csv = "*"
python-slugify = "*"
pyyaml = "*"
uritemplate = "*"
google-cloud-ndb = "*"
whitenoise = {extras = ["brotli"] }
channels = "*"
channels-redis = "*"
timeago = "*"
markdown = "*"
python-frontmatter = "*"
beautifulsoup4 = "*"
lxml = "*"
pandas = "*"
daphne = "*"
twisted = {extras = ["http2", "tls"] }
nbconvert = "*"
certifi = "*"
numpy = "*"
google-cloud-recaptcha-enterprise = "*"
coralogix-logger = "*"
stripe = "*"
currencies = "*"
babel = "*"
openai = "*"
launchdarkly-server-sdk = "*"
async-timeout = "*"
exceptiongroup = "*"
pip = "*"
sqlalchemy-bigquery = { extras = ["bqstorage"]}
drf-yasg = "*"
google-cloud-firestore = "*"
gevent = "*"
newrelic = "*"
graphene-django = "*"
graphene-django-optimizer = "*"
sqlalchemy = "<2.0"
pytest-env = "*"
premailer = "*"
google-cloud-bigquery = "*"
redis = {extras = ["hiredis"] }
brotli = "*"
circuitbreaker = "*"
kombu = "*"
zstandard = "*"
psycopg = {extras = ["pool", "binary"] }
cryptography = "*"
adrf = "*"
django-minify-html = "*"
django-storages = {extras = ["google"] }
aiohttp = {extras = ["speedups"] }
aiodns = "*"
eventlet = "*"
linked-services = {extras = ["django", "aiohttp", "requests"] }
celery-task-manager = {extras = ["django"] }
django-sql-explorer = {extras = ["xls"] }
contextlib2 = "*"
google-apps-meet = "*"
google-auth-httplib2 = "*"
google-auth-oauthlib = "*"
capy-core = {extras = ["django"] }
google-api-python-client = "*"
python-dotenv = "*"
uvicorn-worker = "*"
pyright = "*"
mypy = "*"
python-magic = "*"
uvicorn = {extras = ["standard"], version = "*"}
