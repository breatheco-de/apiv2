{
    "name": "Ubuntu",
    "image": "mcr.microsoft.com/devcontainers/base:ubuntu",
    "remoteUser": "vscode",
    "features": {
        "ghcr.io/devcontainers-extra/features/poetry:2": {},
        "ghcr.io/devcontainers/features/aws-cli:1": {},
        "ghcr.io/devcontainers/features/docker-in-docker:2": {},
        "ghcr.io/meaningful-ooo/devcontainer-features/fish:2": {},
        "ghcr.io/devcontainers/features/rust:1": {},
        "ghcr.io/shyim/devcontainers-features/bun:0": {},
        "ghcr.io/devcontainers/features/python:1": {},
        "ghcr.io/itsmechlark/features/rabbitmq-server:1": {},
        "ghcr.io/rocker-org/devcontainer-features/apt-packages:1": {
            "packages": [
                "curl",
                "git",
                "vim",
                "sudo",
                "build-essential",
                "libpq-dev",
                "python3-dev",
                "clang",
                "netcat"
            ],
            "update": true
        },
        "ghcr.io/devcontainers-extra/features/heroku-cli:1": {}
    },
    "customizations": {
        "vscode": {
            "settings": {
                "python.languageServer": "Pylance",
                "python.analysis.typeCheckingMode": "off",
                "editor.formatOnSave": true,
                "[python]": {
                    "editor.formatOnSaveMode": "file",
                    "editor.formatOnSave": true,
                    "editor.defaultFormatter": "ms-python.black-formatter",
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": "explicit"
                    }
                },
                "isort.args": [
                    "--profile",
                    "black"
                ],
                "files.eol": "\n"
            },
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "mikestead.dotenv",
                "ms-azuretools.vscode-docker",
                "github.vscode-pull-request-github",
                "eamodio.gitlens",
                "gruntfuggly.todo-tree",
                "redhat.vscode-yaml",
                "ms-python.black-formatter",
                "ms-python.isort",
                "janisdd.vscode-edit-csv",
                "tamasfe.even-better-toml",
                "ms-python.flake8",
                "donjayamanne.githistory",
                "ms-python.debugpy"
            ]
        }
    },
    "forwardPorts": [
        8000,
        3000
    ],
    "mounts": [
        {
            "type": "volume",
            "source": "vscode_fish_share",
            "target": "/home/vscode/.local/share/fish"
        },
        {
            "type": "volume",
            "source": "vscode_fish_config",
            "target": "/home/vscode/.config/fish"
        },
        {
            "type": "volume",
            "source": "vscode_fish_cache",
            "target": "/home/vscode/.cache/fish"
        },
        {
            "type": "volume",
            "source": "vscode_poetry_cache",
            "target": "/home/vscode/.cache/pypoetry"
        },
        {
            "type": "volume",
            "source": "vscode_poetry_share",
            "target": "/home/vscode/.local/share/pypoetry"
        },
        {
            "type": "volume",
            "source": "omf_config",
            "target": "/home/vscode/.config/omf"
        },
        {
            "type": "volume",
            "source": "pipx_cache",
            "target": "/home/vscode/.cache/pipx"
        },
        {
            "type": "volume",
            "source": "pip_cache",
            "target": "/home/vscode/.cache/pip"
        },
        {
            "type": "volume",
            "source": "virtualenv_share",
            "target": "/home/vscode/.local/share/virtualenv"
        },
        {
            "type": "volume",
            "source": "pre_commit_cache",
            "target": "/home/vscode/.cache/pre-commit"
        }
    ],
    "onCreateCommand": "$PWD/.devcontainer/finishContainerSetup.sh",
    "updateContentCommand": "$PWD/.devcontainer/onCodeUpdated.sh",
    "postCreateCommand": "$PWD/.devcontainer/postCodeUpdated.sh",
    "postStartCommand": "$PWD/.devcontainer/startup.sh"
}
